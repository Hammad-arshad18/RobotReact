{"version":3,"sources":["reportWebVitals.js","components/card.js","components/cardComponent.js","components/Scrool.js","components/SearchBox.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","Card","props","id","name","email","react_default","a","createElement","className","src","concat","alt","CardComponent","robots","cardArray","map","user","i","card","key","Scrool","style","overflowY","height","children","SearchBox","search","type","placeholder","onChange","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSearchChange","data","setState","searchData","target","value","state","_this2","fetch","response","json","_this$state","filterRobots","filter","robot","toLowerCase","includes","components_SearchBox","components_Scrool","cardComponent","Component","ReactDOM","render","StrictMode","containers_App","document","getElementById"],"mappings":"yJAYeA,SAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,kDCQCY,EAbF,SAACC,GAAU,IACdC,EAAoBD,EAApBC,GAAIC,EAAgBF,EAAhBE,KAAMC,EAAUH,EAAVG,MAClB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAW,qDACdH,EAAAC,EAAAC,cAAA,OAAKE,IAAG,wBAAAC,OAA0BR,EAA1B,YAAwCS,IAAI,UADtD,KAEEN,EAAAC,EAAAC,cAAA,OAAKC,UAAW,MACdH,EAAAC,EAAAC,cAAA,UAAKJ,GACLE,EAAAC,EAAAC,cAAA,SAAIH,MCSGQ,EAfO,SAACX,GAAU,IACvBY,EAAWZ,EAAXY,OACFC,EAAYD,EAAOE,IAAI,SAACC,EAAMC,GAClC,OACEZ,EAAAC,EAAAC,cAACW,EAAD,CACEC,IAAKF,EACLf,GAAIW,EAAOI,GAAGf,GACdC,KAAMU,EAAOI,GAAGd,KAChBC,MAAOS,EAAOI,GAAGb,UAIvB,OAAOC,EAAAC,EAAAC,cAAA,WAAMO,ICPAM,EANA,SAACnB,GACd,OACEI,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAAEC,UAAW,SAAUC,OAAQ,UAAYtB,EAAMuB,WCWlDC,EAbG,SAAA/B,GAAgB,IAAbgC,EAAahC,EAAbgC,OACnB,OACErB,EAAAC,EAAAC,cAAA,OAAKC,UAAW,OACdH,EAAAC,EAAAC,cAAA,SACEC,UAAW,gCACXmB,KAAM,OACNC,YAAa,kBACbC,SAAUH,MC8BHI,cAjCb,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACZC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAYFI,eAAiB,SAACC,GAChBR,EAAKS,SAAS,CAAEC,WAAYF,EAAKG,OAAOC,SAZxCZ,EAAKa,MAAQ,CACX/B,OAAQ,GACR4B,WAAY,IAJFV,mFAOM,IAAAc,EAAAX,KAClBY,MAAM,8CACHtD,KAAK,SAACuD,GAAD,OAAcA,EAASC,SAC5BxD,KAAK,SAACwB,GAAD,OAAU6B,EAAKL,SAAS,CAAE3B,OAAQG,uCAMnC,IAAAiC,EACwBf,KAAKU,MAA5B/B,EADDoC,EACCpC,OAAQ4B,EADTQ,EACSR,WACVS,EAAerC,EAAOsC,OAAO,SAACC,GAClC,OAAOA,EAAMjD,KAAKkD,cAAcC,SAASb,EAAWY,iBAEtD,OACEhD,EAAAC,EAAAC,cAAA,OAAKC,UAAW,MACdH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gCAAd,sBACAH,EAAAC,EAAAC,cAACgD,EAAD,CAAW7B,OAAQQ,KAAKI,iBACxBjC,EAAAC,EAAAC,cAACiD,EAAD,KACEnD,EAAAC,EAAAC,cAACkD,EAAD,CAAe5C,OAAQqC,aA3BfQ,aCElBC,IAASC,OACPvD,EAAAC,EAAAC,cAACF,EAAAC,EAAMuD,WAAP,KACExD,EAAAC,EAAAC,cAACuD,EAAD,OAEFC,SAASC,eAAe,SAM1B7E","file":"static/js/main.5f8d8648.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\n\r\nconst Card = (props) => {\r\n  const { id, name, email } = props;\r\n  return (\r\n    <div className={\"bg-light-green dib br3 pa3 ma2 grow bw-2 shadow-2\"}>\r\n      <img src={`https://robohash.org/${id}?200x200`} alt=\"Robot\" />\\\r\n      <div className={\"tc\"}>\r\n        <h1>{name}</h1>\r\n        <p>{email}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"./card\";\r\n\r\nconst CardComponent = (props) => {\r\n  const { robots } = props;\r\n  const cardArray = robots.map((user, i) => {\r\n    return (\r\n      <Card\r\n        key={i}\r\n        id={robots[i].id}\r\n        name={robots[i].name}\r\n        email={robots[i].email}\r\n      />\r\n    );\r\n  });\r\n  return <div>{cardArray}</div>;\r\n};\r\n\r\nexport default CardComponent;\r\n","import React from \"react\";\r\n\r\nconst Scrool = (props) => {\r\n  return (\r\n    <div style={{ overflowY: \"scroll\", height: \"600px\" }}>{props.children}</div>\r\n  );\r\n};\r\n\r\nexport default Scrool;\r\n","import React from \"react\";\r\n\r\nconst SearchBox = ({ search }) => {\r\n  return (\r\n    <div className={\"ma3\"}>\r\n      <input\r\n        className={\"pa3 ba2 br3  bg-lightest-blue\"}\r\n        type={\"text\"}\r\n        placeholder={\"Search Robotics\"}\r\n        onChange={search}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { Component } from \"react\";\r\nimport CardComponent from \"../components/cardComponent\";\r\nimport Scrool from \"../components/Scrool\";\r\nimport SearchBox from \"../components/SearchBox\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      robots: [],\r\n      searchData: \"\",\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then((response) => response.json())\r\n      .then((user) => this.setState({ robots: user }));\r\n  }\r\n\r\n  onSearchChange = (data) => {\r\n    this.setState({ searchData: data.target.value });\r\n  };\r\n  render() {\r\n    const { robots, searchData } = this.state;\r\n    const filterRobots = robots.filter((robot) => {\r\n      return robot.name.toLowerCase().includes(searchData.toLowerCase());\r\n    });\r\n    return (\r\n      <div className={\"tc\"}>\r\n        <h1 className=\"f1 bg-white ma3 ba2 pa2 br2 \">Robotics React App</h1>\r\n        <SearchBox search={this.onSearchChange} />\r\n        <Scrool>\r\n          <CardComponent robots={filterRobots} />\r\n        </Scrool>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"tachyons\";\nimport App from \"./containers/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}